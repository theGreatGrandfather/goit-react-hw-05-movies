{"version":3,"file":"static/js/134.271ecc96.chunk.js","mappings":"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","sources":["components/Api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMoviesBySearch } from 'components/Api';\n\n\n\nfunction Movies(props) {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const pageQuery = searchParams.get(\"page\") ?? '';\n    const query = searchParams.get(\"query\") ?? '';\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(null);\n    const [searchResult, setSearchResult] = useState([]);\n    const [totalPages, setTotalPages] = useState(null);\n\n    const location = useLocation();\n    \n    useEffect(() => {\n        const searchMovies = async () => {\n            if (!query) {\n                return\n            }\n            try {\n                const resp = await getMoviesBySearch(query, pageQuery)\n                console.log('searchResult :>> ', resp);\n                setSearchResult(resp.results);\n                setTotalPages(resp.total_pages)\n                return\n            } catch (error) {\n                console.log('error :>> ', error);\n            }\n            \n        } \n        searchMovies();\n\n        return () => {\n            setSearchResult([]);\n            setSearchQuery(null);\n            setTotalPages(null)\n        }\n\n    }, [pageQuery, query])\n\n    const onInputChange = e => {\n        e.preventDefault();\n        setSearchQuery(e.currentTarget.value.toLowerCase());\n    }\n\n    const setQuery = e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '') {\n            return;\n        }\n        setSearchParams({ query: searchQuery, page:1 });\n        setPage(1);\n        e.target[0].value = '';\n    }\n\n    const onPrevNextBtnClick = (key) => {\n        switch (key) {\n            case 'prev':\n                setPage(prevPage => Math.max(prevPage - 1, 1));\n                setSearchParams({ query: query, page: page - 1 });\n                break;\n            case 'next':\n                setPage(prevPage => prevPage + 1);\n                setSearchParams({  query: query, page: page + 1 });\n                break;\n            default:\n                break;\n        }\n    }\n\n    console.log('location :>> ', location);\n\n    return (\n        <div>Movies\n            \n            <form  onSubmit={setQuery}>\n                <input\n                    name='name'\n                    onChange={onInputChange}\n                    type=\"text\"\n                />\n                <button type='submit'>search</button>\n            </form>\n            \n            <ul>\n                {searchResult.length ?\n                    searchResult.map((el) =>\n                        <li key={el.id}>\n                            <Link\n                                to={`${el.id}`}\n                                state={{ from: location }}\n                            >\n                                {el.title || el.original_name}</Link>\n                        </li>) :\n                    <p>No movies by request {`${searchParams}`} </p>\n                }\n            </ul>\n            {totalPages && \n                <ul>\n                    {pageQuery !== '1' &&\n                        <li>\n                            <button type='button' onClick={()=>onPrevNextBtnClick('prev')}>prev</button>\n                        </li>}\n                    {totalPages > pageQuery && totalPages !== pageQuery &&\n                        <li>\n                            <button type='button' onClick={() => onPrevNextBtnClick('next')}>next</button>\n                    </li>}\n                </ul>\n            }\n        </div>\n    )\n}\n\nexport default Movies\n"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","props","useSearchParams","searchParams","setSearchParams","pageQuery","get","query","useState","setSearchQuery","setPage","searchResult","setSearchResult","totalPages","setTotalPages","location","useLocation","useEffect","searchMovies","resp","console","log","results","total_pages","onPrevNextBtnClick","key","prevPage","Math","max","onSubmit","e","preventDefault","trim","target","value","name","onChange","currentTarget","toLowerCase","type","length","map","el","to","state","from","title","original_name","onClick"],"sourceRoot":""}