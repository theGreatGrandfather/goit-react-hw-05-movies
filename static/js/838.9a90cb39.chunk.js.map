{"version":3,"file":"static/js/838.9a90cb39.chunk.js","mappings":"4TAEMA,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,wDAKjBI,EAAa,mCAAG,WAAOC,GAAP,uFACFR,IAAAA,IAAA,gBAAmBQ,EAAnB,mCAAgDT,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbM,EAAO,mCAAG,WAAOD,GAAP,uFACIR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPO,EAAM,mCAAG,WAAOF,GAAP,uFACKR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,wKCvBNQ,EAAOC,EAAAA,EAAAA,GAAH,2HCAJC,EAAOD,EAAAA,EAAAA,GAAH,kRAaJE,EAAMF,EAAAA,EAAAA,IAAH,mHAOHG,EAAcH,EAAAA,EAAAA,EAAH,wFAMXI,EAAOJ,EAAAA,EAAAA,EAAH,8G,SCLjB,MAnBA,YAA+C,IAA5BJ,EAA2B,EAA3BA,GAAIS,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,UAC9B,OACI,UAACN,EAAD,YAGI,SAACC,EAAD,CAAMM,MAAO,IAAKC,IAAMH,EAAD,yCACeA,GAClC,2GACEI,IAAKL,KACX,SAACD,EAAD,UACKC,KAEL,SAACF,EAAD,UACKI,MAVAX,EAchB,ECUD,MAzBA,YAA6B,IAATe,EAAQ,EAARA,KAChB,OACI,SAACZ,EAAD,UACSY,EAAKC,KAAI,SAACC,GAAD,OACN,SAAC,EAAD,CAEIP,IAAKO,EAAGC,aACRP,UAAWM,EAAGN,UACdF,KAAMQ,EAAGR,MAHJQ,EAAGjB,GAFN,KAWzB,ECkBD,MAjCA,WACI,IAAQmB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAON,EAAP,KAAaO,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEOvB,EAAAA,EAAAA,IAAQkB,GAFf,OAENM,EAFM,OAGZC,QAAQC,IAAI,eAAgBF,GAC5BH,EAAQG,EAAKV,MAJD,gDAMZW,QAAQC,IAAI,eAAZ,MANY,yDAAH,qDAUjBH,GAEH,GAAE,CAAEL,IAELO,QAAQC,IAAI,YAAaZ,IAErB,yBACMA,GAAMA,EAAKa,QAAS,SAAC,EAAD,CAClBb,KAAMA,KAEV,uBAAG,yBAId,C","sources":["components/Api.js","components/CastList/CastList.styled.js","components/CastItem/CastItem.styled.js","components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nalign-items: start;\nflex-wrap: wrap;\ngap: 40px;\njustify-content: space-around;\n`\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap:8px;\n    border: 2px solid lightblue;\n    padding: 15px;\n    border-radius: 15px;\n    align-items: center;\n    justify-content: center;\n    flex-basis: calc((100% - 200px) / 6);\n\n    \n`\nexport const Img = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`\n\nexport const Description = styled.p`\n    display: block;\n    margin: 0;\n    text-align: center;\n\n`\nexport const Name = styled.p`\n    display: block;\n    margin: 0;\n    font-weight: 600;\n    text-align:center;\n\n`","import React from 'react'\n\nimport {Item, Img, Description, Name} from './CastItem.styled'\n\nfunction CastItem({id, name, img, character}) {\n    return (\n        <Item\n            key={id}\n        >\n            <Img  width={160} src={(img) ?\n                `https://image.tmdb.org/t/p/w200${img}` :\n                'https://raw.githubusercontent.com/theGreatGrandfather/goit-react-hw-05-movies/main/public/background.jpg'\n                } alt={name}/>\n            <Name>\n                {name}\n            </Name>\n            <Description>\n                {character}\n            </Description>\n        </Item>\n    )\n}\n\nexport default CastItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { List } from './CastList.styled'\nimport CastItem from 'components/CastItem/CastItem'\n\nfunction CastList({ cast }) {\n    return (\n        <List>        \n                {cast.map((el) => (\n                    <CastItem\n                        key={el.id}\n                        img={el.profile_path}\n                        character={el.character}\n                        name={el.name}\n                    />\n                ))}\n                \n        </List>\n    )\n}\n\nCastList.propTypes = {\n    cast: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired, \n        profile_path: PropTypes.string, \n        character: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired, \n    })).isRequired, \n};\n\nexport default CastList\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../Api';\nimport CastList from 'components/CastList/CastList';\n\nfunction Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(() => {\n        const getCastData = async () => {\n            try {\n                const resp = await getCast(movieId);\n                console.log('getCast :>> ', resp);\n                setCast(resp.cast);\n            } catch (error) {\n                console.log('getCast :>> ', error);\n            }\n        };\n\n        getCastData();\n\n    }, [ movieId]);\n\n    console.log('cast :>> ', cast);\n    return (\n        <div>\n            {(cast&&cast.length) ?<CastList\n                cast={cast}\n            /> :\n            <p>No data about cast </p>\n            }\n        </div>\n    );\n}\n\n\n\nexport default Cast;"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","List","styled","Item","Img","Description","Name","name","img","character","width","src","alt","cast","map","el","profile_path","movieId","useParams","useState","setCast","useEffect","getCastData","resp","console","log","length"],"sourceRoot":""}