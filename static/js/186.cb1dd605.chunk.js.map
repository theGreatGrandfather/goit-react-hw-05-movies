{"version":3,"file":"static/js/186.cb1dd605.chunk.js","mappings":"4TAEMA,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,wDAKjBI,EAAa,mCAAG,WAAOC,GAAP,uFACFR,IAAAA,IAAA,gBAAmBQ,EAAnB,mCAAgDT,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbM,EAAO,mCAAG,WAAOD,GAAP,uFACIR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPO,EAAM,mCAAG,WAAOF,GAAP,uFACKR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,+GCcnB,UAnCA,WAEK,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACT,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEQP,EAAAA,EAAAA,IAAOC,GAFf,OAELO,EAFK,OAGXH,EAAOG,EAAKC,SACZC,QAAQC,IAAI,WAAYH,EAAKC,SAJlB,gDAMXC,QAAQC,IAAI,aAAZ,MANW,yDAAH,qDAUhBJ,GACH,GAAE,CAACN,IACJS,QAAQC,IAAI,WAAYP,IAEpB,0BACI,wBACKA,EAAIQ,OAASR,EAAIS,KAAI,SAACC,GAAD,OAClB,2BACI,wBAAG,yBAAG,WAASA,EAAGC,aAClB,uBAAKD,EAAGE,YAFHF,EAAGhB,GADM,KAMtB,uBAAG,8BAKlB,C","sources":["components/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getRev } from '../Api';\n\nfunction Reviews() {\n    \n     const { movieId } = useParams();\n    const [rev, setRev] = useState([])\n\n    useEffect(() => {\n        const getRevData = async () => {\n            try {\n                const resp = await getRev(movieId);\n                setRev(resp.results);\n                console.log('rev :>> ', resp.results);\n            } catch (error) {\n                console.log('error :>> ', error);\n            }\n        }\n        \n        getRevData();\n    }, [movieId])\n    console.log('rev :>> ', rev);\n    return (\n        <div>\n            <ul>\n                {rev.length ? rev.map((el) =>\n                    <li key={el.id}>\n                        <p><b>Aithor: {el.author}</b></p>\n                        <p>{ el.content}</p>\n                    </li>\n                ) :\n                <p>No data about reviews </p>\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Reviews\n"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","movieId","useParams","useState","rev","setRev","useEffect","getRevData","resp","results","console","log","length","map","el","author","content"],"sourceRoot":""}