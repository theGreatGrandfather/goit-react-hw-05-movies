{"version":3,"file":"static/js/319.a12e2c6e.chunk.js","mappings":"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","sources":["components/404/ErrorPage.styled.js","components/404/ErrorPage.jsx","components/Api.js","components/MowiesItem/MowiesItem.stuled.js","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useTurnError.js","hooks/useTurnLoader.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/SearchList/SearchList.styled.js","components/SearchItem/SeachItem.jsx","components/SearchList/SeachList.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n\n`\n\nexport const Window = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`\n\nexport const Text = styled.p`\n    display: block;\n    color: red;\n    font-weight: 700;\n    text-align: center;\n    font-size: 28px;\n`","import React from 'react'\nimport { Overlay, Window, Text } from './ErrorPage.styled'\n\nfunction ErrorPage() {\n  return (\n    <Overlay>\n      <Window>\n        <Text>\n          Something went wrong... Try reload the page\n        </Text>\n      </Window>\n    </Overlay>\n  )\n}\n\n\n\nexport default ErrorPage\n","import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    console.log('searchQuery :>> ', searchQuery);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom'\n\nexport const Item = styled.li`\n    display: flex;\n    gap:20px;\n    align-items: center;\n    justify-content: center;\n    flex-basis: calc((100% - 100px) / 5);\n\n    \n`\n\nexport const ItemLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    gap:10px;\n    max-width: 200px;\n    text-decoration: none;\n    font-weight: 500;\n    color: #111;\n    white-space: normal;\n    border: 2px solid #e7e7e7;\n    border-radius: 8px;\n    padding: 8px;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.3s ease;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    &:hover,\n    &:focus{\n        transform: scale(1.1);\n    }    \n`\n\nexport const Img = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`\nexport const Title = styled.p`\n    display: block;\n    text-align: center;\n`","import styled from \"@emotion/styled\";\n\nexport const SectionElemet = styled.section`\ndisplay: flex;\nflex-direction: column;\npadding-top: 20px;\npadding-bottom: 20px;\nmax-width: 99vw;\n\n\n/* align-items: center; */\n`\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\n\n \npadding-left: 20px;\npadding-right: 20px;\n/* margin-left: auto;\nmargin-right: auto; */\n\n`\nexport const Title = styled.h1`\ntext-align: center;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionElemet, Container, Title } from './Section.styled';\n\nconst Section = ({title, children}) => {\n\n    return (\n        <SectionElemet>\n            <Container>\n                {title && <Title>\n                    {title}\n                </Title>}\n                    {children}\n            </Container>\n        </SectionElemet>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node\n}\n\nexport default Section","import { useState } from \"react\";\n\nexport const useTurnError = () => {\n  const [error, setError] = useState(false);\n  const on = () => setError(true);\n  const off = () => setError(false);\n  const toggle = () => setError(error => !error);\n\n  return { error, toggle,  on, off };\n};","import { useState } from \"react\";\n\nexport const useTurnLoader = () => {\n  const [loading, setLoading] = useState(false);\n  const onLoading = () => setLoading(true);\n  const offLoading = () => setLoading(false);\n  const toggleLoading = () => setLoading(loading => !loading);\n\n  return { loading, toggleLoading,  onLoading, offLoading };\n};","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\ngap: 4px;\nmargin-top: 20px;\nmargin-bottom: 20px;\n\n`\nexport const Input = styled.input`\ndisplay: flex;\npadding: 12px;\nborder: 2px solid lightblue;\nborder-radius: 8px;\nwidth: 300px;\n\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\npadding: 12px;\nborder: 2px solid lightblue;\nborder-radius: 8px;\nbackground-color: transparent;\ntransition: all 0.3s ease;\ncursor: pointer;\n&:hover,\n&:focus{\n    background-color: #3f51b5;\n    border-color: #3f51b5;\n}\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Input, Button } from './SearchForm.styled'\n\nfunction SearchForm({setQuery, onInputChange}) {\n    return (\n        <Form  onSubmit={setQuery}>\n            <Input\n                name='name'\n                onChange={onInputChange}\n                type=\"text\"\n            />\n            <Button type='submit'>search</Button>\n        </Form>\n    )\n}\n\nSearchForm.propTypes = {\n    setQuery: PropTypes.func.isRequired,\n    onInputChange: PropTypes.func.isRequired,\n}\n\nexport default SearchForm\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nalign-items: start;\nflex-wrap: wrap;\ngap: 20px;\njustify-content: space-around;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Item, ItemLink, Img, Title } from '../MowiesItem/MowiesItem.stuled'\n\nfunction SeachItem({id, img, title, to, state}) {\n    return (\n        <Item\n            key={id}\n        >\n            <ItemLink\n                to={to}\n                state={state}\n            >\n                <Img  src={img} alt={title} />\n                <Title>{title}</Title>\n            </ItemLink>\n        </Item>\n    )\n}\n\nSeachItem.propTypes = {\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    to: PropTypes.string,\n    state: PropTypes.object,\n};\n\nexport default SeachItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { List } from './SearchList.styled';\nimport SeachItem from 'components/SearchItem/SeachItem';\n\nfunction SearchList({ searchResult, state }) {\n\n    return (\n        <>\n            <List>\n                {searchResult &&\n                    searchResult.map((el) =>\n                        <SeachItem\n                            key={el.id}\n                            to={`${el.id}`}\n                            state={state}\n                            img={el.poster_path !== null ?\n                                `https://image.tmdb.org/t/p/w200${el.poster_path}` :\n                                'https://raw.githubusercontent.com/theGreatGrandfather/goit-react-hw-05-movies/main/public/background.jpg'}\n                            title={el.title || el.original_title}\n                        >\n                            \n                        </SeachItem>) \n                    \n                }\n    \n            </List>\n        </>\n    )\n}\n\nSearchList.propTypes = {\n    searchResult: PropTypes.array,\n    state: PropTypes.object,\n};\n\nexport default SearchList\n","import React, { useEffect, useState } from 'react'\nimport { useLocation, useSearchParams } from \"react-router-dom\";\n\nimport { getMoviesBySearch } from 'components/Api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport SearchList from 'components/SearchList/SeachList';\nimport Section from 'components/Section/Section';\nimport { Button } from 'components/SearchForm/SearchForm.styled';\nimport { useTurnError } from 'hooks/useTurnError';\nimport ErrorPage from 'components/404/ErrorPage';\nimport { useTurnLoader } from 'hooks/useTurnLoader';\nimport Loader from 'components/Loader/Loader';\n\nfunction Movies() {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const pageQuery = searchParams.get(\"page\") ?? '';\n    const query = searchParams.get(\"query\") ?? '';\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(null);\n    const [searchResult, setSearchResult] = useState([]);\n    const [totalPages, setTotalPages] = useState(null);\n\n    const location = useLocation();\n    const { error, on, off } = useTurnError(false);\n    const { loading, toggleLoading } = useTurnLoader(false);\n\n    useEffect(() => {\n        const searchMovies = async () => {\n            toggleLoading(true);\n            off(true)\n            if (!query) {\n                toggleLoading(false)\n                return\n            }\n            try {\n                \n                const resp = await getMoviesBySearch(query, pageQuery)\n                setSearchResult(resp.results);\n                setTotalPages(resp.total_pages)\n                return\n            } catch (error) {\n                on(true)\n            }finally {\n                toggleLoading(false)\n            }\n            \n        } \n        searchMovies();\n\n        return () => {\n            setSearchResult([]);\n            setSearchQuery('');\n            setTotalPages(null)\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageQuery, query  ])\n\n    const onInputChange = e => {\n        e.preventDefault();\n        setSearchQuery(e.currentTarget.value.toLowerCase());\n    }\n\n    const setQuery = e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '') {\n            return;\n        }\n        setSearchParams({ query: searchQuery, page:1 });\n        setPage(1);\n        e.target[0].value = '';\n        off(true)\n    }\n\n    const onPrevNextBtnClick = (key) => {\n        switch (key) {\n            case 'prev':\n                setPage(prevPage => Math.max(prevPage - 1, 1));\n                setSearchParams({ query: query, page: page - 1 });\n                break;\n            case 'next':\n                setPage(prevPage => prevPage + 1);\n                setSearchParams({  query: query, page: page + 1 });\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <>\n            {loading && <Loader/>}\n            <Section> \n                {error&& <ErrorPage/>}\n                <SearchForm\n                    setQuery={setQuery}\n                    onInputChange={onInputChange}\n                />\n                <SearchList\n                    searchResult={searchResult}\n                    // to={`${searchResult.id}`}\n                    state={{ from: location }}\n                    query={`'${query}'`}\n                />\n                {totalPages && \n                    <ul style={\n                        {\n                            display: 'flex',\n                            gap: '8px'\n                        }\n                    }>\n                        {pageQuery !== '1' &&\n                            <li>\n                                <Button type='button' onClick={()=>onPrevNextBtnClick('prev')}>prev</Button>\n                            </li>}\n                        {totalPages > pageQuery && totalPages !== pageQuery &&\n                            <li>\n                                <Button type='button' onClick={() => onPrevNextBtnClick('next')}>next</Button>\n                        </li>}\n                    </ul>\n                }\n                \n            </Section>\n        </>)\n}\n\nexport default Movies\n"],"names":["Overlay","styled","Window","Text","KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","console","log","getMoviesById","id","getCast","getRev","Item","ItemLink","Link","Img","Title","SectionElemet","Container","title","children","useTurnError","useState","error","setError","toggle","on","off","useTurnLoader","loading","setLoading","toggleLoading","onLoading","offLoading","Form","Input","Button","setQuery","onInputChange","onSubmit","name","onChange","type","List","img","to","state","src","alt","searchResult","map","el","poster_path","original_title","useSearchParams","searchParams","setSearchParams","pageQuery","get","query","setSearchQuery","setPage","setSearchResult","totalPages","setTotalPages","location","useLocation","useEffect","searchMovies","resp","results","total_pages","onPrevNextBtnClick","key","prevPage","Math","max","Loader","Section","ErrorPage","e","preventDefault","trim","target","value","currentTarget","toLowerCase","from","style","display","gap","onClick"],"sourceRoot":""}