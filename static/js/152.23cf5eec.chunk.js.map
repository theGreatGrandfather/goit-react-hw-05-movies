{"version":3,"file":"static/js/152.23cf5eec.chunk.js","mappings":"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","sources":["components/404/ErrorPage.styled.js","components/404/ErrorPage.jsx","components/Api.js","components/MowiesItem/MowiesItem.stuled.js","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useTurnError.js","hooks/useTurnLoader.js","components/MowieFomCollection/MowieFomCollection.styled.js","components/MowieFomCollection/MowieFomCollection.jsx","components/DetailsInfo/DetailsInfo.styled.js","components/DetailsInfo/DetailsInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n\n`\n\nexport const Window = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`\n\nexport const Text = styled.p`\n    display: block;\n    color: red;\n    font-weight: 700;\n    text-align: center;\n    font-size: 28px;\n`","import React from 'react'\nimport { Overlay, Window, Text } from './ErrorPage.styled'\n\nfunction ErrorPage() {\n  return (\n    <Overlay>\n      <Window>\n        <Text>\n          Something went wrong... Try reload the page\n        </Text>\n      </Window>\n    </Overlay>\n  )\n}\n\n\n\nexport default ErrorPage\n","import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    console.log('searchQuery :>> ', searchQuery);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom'\n\nexport const Item = styled.li`\n    display: flex;\n    gap:20px;\n    align-items: center;\n    justify-content: center;\n    flex-basis: calc((100% - 100px) / 5);\n\n    \n`\n\nexport const ItemLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    gap:10px;\n    max-width: 200px;\n    text-decoration: none;\n    font-weight: 500;\n    color: #111;\n    white-space: normal;\n    border: 2px solid #e7e7e7;\n    border-radius: 8px;\n    padding: 8px;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.3s ease;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    &:hover,\n    &:focus{\n        transform: scale(1.1);\n    }    \n`\n\nexport const Img = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`\nexport const Title = styled.p`\n    display: block;\n    text-align: center;\n`","import styled from \"@emotion/styled\";\n\nexport const SectionElemet = styled.section`\ndisplay: flex;\nflex-direction: column;\npadding-top: 20px;\npadding-bottom: 20px;\nmax-width: 99vw;\n\n\n/* align-items: center; */\n`\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\n\n \npadding-left: 20px;\npadding-right: 20px;\n/* margin-left: auto;\nmargin-right: auto; */\n\n`\nexport const Title = styled.h1`\ntext-align: center;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionElemet, Container, Title } from './Section.styled';\n\nconst Section = ({title, children}) => {\n\n    return (\n        <SectionElemet>\n            <Container>\n                {title && <Title>\n                    {title}\n                </Title>}\n                    {children}\n            </Container>\n        </SectionElemet>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node\n}\n\nexport default Section","import { useState } from \"react\";\n\nexport const useTurnError = () => {\n  const [error, setError] = useState(false);\n  const on = () => setError(true);\n  const off = () => setError(false);\n  const toggle = () => setError(error => !error);\n\n  return { error, toggle,  on, off };\n};","import { useState } from \"react\";\n\nexport const useTurnLoader = () => {\n  const [loading, setLoading] = useState(false);\n  const onLoading = () => setLoading(true);\n  const offLoading = () => setLoading(false);\n  const toggleLoading = () => setLoading(loading => !loading);\n\n  return { loading, toggleLoading,  onLoading, offLoading };\n};","import styled from \"@emotion/styled\";\n\nexport const ContentWrapper = styled.div`\n    display: flex;\n    gap: 20px;\n    text-align: start;\n`\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 20px;\n    padding-top: 30px;\n    padding-bottom: 30px;\n    \n`\nexport const GenresContainer = styled.div`\n    display: flex;\n    gap: 20px;\n    justify-content: flex-start;\n    \n`\nexport const MovieTite = styled.h1`\n    display: flex;\n    margin: 0;\n`\nexport const MovieImg = styled.img`\n    display: flex;\n    width: 300px;\n`\nexport const MovieSupTitle = styled.h2`\n    display: flex;\n    margin: 0;\n`\nexport const MovieDescription = styled.p`\n    display: flex;\n    margin: 0;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ContentContainer,ContentWrapper, MovieImg, MovieTite, GenresContainer, MovieDescription, MovieSupTitle } from './MowieFomCollection.styled'\n\nfunction MowieFomCollection({ title, img, average, overview, genres, movieData }) {\n    return (\n        <ContentWrapper>\n            \n            {movieData &&\n                <MovieImg\n                    src={ img }\n                    alt={title}\n            />}\n            {movieData ?\n                <ContentContainer>\n                    <MovieTite>\n                        {title}\n                    </MovieTite>\n                    <MovieDescription>\n                        { `User Score: ${average}%`}\n                    </MovieDescription> \n                    <MovieSupTitle>\n                        Overview\n                    </MovieSupTitle>\n                    <MovieDescription>\n                        {overview }\n                    </MovieDescription> \n                    <MovieSupTitle>\n                        Genres\n                    </MovieSupTitle>\n                    <GenresContainer>\n                    {genres.map((el) =>\n                        <MovieDescription\n                            key={el}\n                        >\n                            {el}\n                        </MovieDescription> \n                    )}\n                    </GenresContainer>\n                </ContentContainer> :\n                <MovieSupTitle>Sorry no data</MovieSupTitle>}\n        </ContentWrapper>\n    )\n}\n\nMowieFomCollection.propTypes = {\n    title: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    average: PropTypes.number,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n    movieData: PropTypes.object,\n};\nexport default MowieFomCollection\n","import styled from \"@emotion/styled\";\n\nexport const DetaisWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 20px;\n    padding-top: 30px;\n    padding-bottom: 30px;\n`\nexport const DetaisList = styled.ul`\n    display: flex;\n    gap: 20px;\n    justify-content: start;\n`\nexport const DetailsItem = styled.li`\n    display: flex;\n    text-align: start;\n    /* padding: 40px; */\n`\n \n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Suspense } from \"react\";\nimport { Outlet } from 'react-router-dom';\n\nimport {DetaisWrapper, DetaisList, DetailsItem} from './DetailsInfo.styled'\nimport {ItemLink} from '../MowiesItem/MowiesItem.stuled'\nimport {MovieDescription} from '../MowieFomCollection/MowieFomCollection.styled'\nimport Loader from 'components/Loader/Loader';\n\nfunction DetailsInfo({cast, reviews}) {\n  return (\n    <DetaisWrapper>\n      <MovieDescription>\n        Additionals information\n      </MovieDescription>\n      <DetaisList>\n        <DetailsItem>\n          <ItemLink to={cast}>\n            Cast\n          </ItemLink>\n        </DetailsItem>\n          <DetailsItem>\n          <ItemLink to={reviews}>\n            Reviews\n          </ItemLink>\n        </DetailsItem>\n      </DetaisList>\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n      </Suspense>\n    </DetaisWrapper>\n  )\n}\n\nDetailsInfo.propTypes = {\n  cast: PropTypes.string.isRequired,\n  reviews: PropTypes.string.isRequired,\n}\n\nexport default DetailsInfo\n","import React, { useEffect, useRef } from 'react'\nimport { useParams, useLocation } from 'react-router-dom'\nimport { useState } from 'react';\n\nimport { getMoviesById } from 'components/Api';\nimport Section from '../components/Section/Section'\nimport MowieFomCollection from 'components/MowieFomCollection/MowieFomCollection';\nimport {ItemLink} from '../components/MowiesItem/MowiesItem.stuled'\nimport DetailsInfo from 'components/DetailsInfo/DetailsInfo';\nimport { useTurnError } from 'hooks/useTurnError';\nimport ErrorPage from 'components/404/ErrorPage';\nimport { useTurnLoader } from 'hooks/useTurnLoader';\nimport Loader from 'components/Loader/Loader';\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [movieData, setMovieData] = useState({});\n\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n    const [title, setTitle] = useState('');\n    const [img, setImg] = useState('');\n    const [average, setAverage] = useState();\n    const [overview, setOverview] = useState('');\n    const [genres, setGenres] = useState([]);\n    const { error, on, off } = useTurnError(false);\n    const { loading, toggleLoading } = useTurnLoader(false);\n    \n    useEffect(() => {\n        const movieDetails = async () => {\n            try {\n                toggleLoading(true)\n                off(true);\n                const resp = await getMoviesById(movieId);\n                setMovieData(resp);\n                setTitle(resp.title);\n                setImg((resp.poster_path) ?\n                    `https://image.tmdb.org/t/p/w300${resp.poster_path}` :\n                    'https://raw.githubusercontent.com/theGreatGrandfather/goit-react-hw-05-movies/main/public/background.jpg');\n                setAverage(Number.parseInt(`${resp.vote_average * 10}`));\n                setOverview(resp.overview);\n                setGenres(resp.genres.map((el) =>\n                    el.name));\n                \n            } catch (error) {\n                on(true)\n            } finally {\n                toggleLoading(false)\n            }\n        }\n        movieDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [movieId])\n    \n    return (\n        <>\n            {loading && <Loader/>}\n            <Section>\n                <ItemLink\n                    to={backLinkHref.current}\n                >\n                    go back\n                </ItemLink>\n                <MowieFomCollection\n                    title={title}\n                    img={img}\n                    average={average}\n                    overview={overview}\n                    genres={genres}\n                    movieData={movieData}\n                />\n            </Section >\n            <Section>\n                <DetailsInfo\n                    cast={'cast'}\n                    reviews={'reviews'}\n                >\n\n                </DetailsInfo>\n            </Section>\n            {error&& <ErrorPage/>}\n        </>\n    )\n}\n\nexport default MovieDetails\n"],"names":["Overlay","styled","Window","Text","KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","console","log","getMoviesById","id","getCast","getRev","Item","ItemLink","Link","Img","Title","SectionElemet","Container","title","children","useTurnError","useState","error","setError","toggle","on","off","useTurnLoader","loading","setLoading","toggleLoading","onLoading","offLoading","ContentWrapper","ContentContainer","GenresContainer","MovieTite","MovieImg","MovieSupTitle","MovieDescription","img","average","overview","genres","movieData","src","alt","map","el","DetaisWrapper","DetaisList","DetailsItem","cast","reviews","to","Suspense","fallback","Loader","movieId","useParams","setMovieData","location","useLocation","backLinkHref","useRef","state","from","setTitle","setImg","setAverage","setOverview","setGenres","useEffect","movieDetails","resp","poster_path","Number","parseInt","vote_average","name","Section","current","ErrorPage"],"sourceRoot":""}