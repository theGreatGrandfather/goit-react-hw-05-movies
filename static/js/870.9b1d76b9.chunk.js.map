{"version":3,"file":"static/js/870.9b1d76b9.chunk.js","mappings":"4TAEMA,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,wDAKjBI,EAAa,mCAAG,WAAOC,GAAP,uFACFR,IAAAA,IAAA,gBAAmBQ,EAAnB,mCAAgDT,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbM,EAAO,mCAAG,WAAOD,GAAP,uFACIR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPO,EAAM,mCAAG,WAAOF,GAAP,uFACKR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,6ICtBNQ,EAAOC,EAAAA,EAAAA,GAAH,sKAUJC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0eAuBRG,EAAMH,EAAAA,EAAAA,IAAH,kH,0FClCHI,EAAgBJ,EAAAA,EAAAA,QAAH,wIAObK,EAAYL,EAAAA,EAAAA,IAAH,qJAQTM,EAAQN,EAAAA,EAAAA,GAAH,6C,SCOlB,EAnBgB,SAAC,GAAuB,IAAtBO,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAErB,OACI,SAACJ,EAAD,WACI,UAACC,EAAD,WACKE,IAAS,SAACD,EAAD,UACLC,IAEAC,MAIpB,C,kKCfYC,E,MAAOT,EAAAA,GAAH,2H,mBCgCjB,MA5BA,YAAsE,IAAhDJ,EAA+C,EAA/CA,GAAIc,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,MAAOJ,EAA4B,EAA5BA,MAAOK,EAAqB,EAArBA,aAAcC,EAAO,EAAPA,IAE1D,OACI,SAAC,KAAD,WAGI,UAAC,KAAD,CACIC,GAAIJ,EACJC,MAAOA,EAFX,WAII,SAAC,KAAD,CAAMI,IAAG,yCAC6BF,GACpCG,IAAI,KACLT,GAASK,MATThB,EAahB,ECoBD,MArCA,YAA4C,IAAtBqB,EAAqB,EAArBA,WAAYN,EAAS,EAATA,MAE9B,OADAO,QAAQC,IAAI,kBAAmBF,IAE3B,SAACR,EAAD,UAGKQ,EAAWG,KAAI,SAACC,GAAD,OAEZ,SAAC,EAAD,CAEIzB,GAAIyB,EAAMzB,GACVc,OAAM,iBAAYW,EAAMzB,IACxBe,MAAOA,EACPJ,MAAOc,EAAMd,MACbK,aAAcS,EAAMC,cACpBT,IAAKQ,EAAME,YACXC,KAAMH,EAAMI,eAPPJ,EAAMzB,GAHH,KAgB3B,ECWD,MA/BA,WACI,OAAoC8B,EAAAA,EAAAA,UAAS,IAA7C,eAAOT,EAAP,KAAmBU,EAAnB,KACUC,GAAWC,EAAAA,EAAAA,MAerB,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,8GAEI1C,EAAAA,EAAAA,MAFJ,cAET2C,EAFS,OAGfL,EAAcK,EAAKC,SAHJ,mDAMff,QAAQC,IAAI,aAAZ,MANe,yDAAH,qDASpBY,GACH,GAAE,KAGC,SAACG,EAAA,EAAD,CACI3B,MAAO,gBADX,UAGI,SAAC,EAAD,CACIU,WAAYA,EACZN,MAAO,CAAEwB,KAAMP,MAM9B,C","sources":["components/Api.js","components/MowiesItem/MowiesItem.stuled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/MowiesList/MowiesList.styled.js","components/MowiesItem/MowiesItem.jsx","components/MowiesList/MowiesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom'\n\nexport const Item = styled.li`\n    display: flex;\n    gap:20px;\n    align-items: center;\n    justify-content: center;\n    flex-basis: calc((100% - 100px) / 5);\n\n    \n`\n\nexport const ItemLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    gap:10px;\n    max-width: 200px;\n    text-decoration: none;\n    font-weight: 500;\n    color: #111;\n    white-space: normal;\n    border: 2px solid #e7e7e7;\n    border-radius: 8px;\n    padding: 8px;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.3s ease;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    &:hover,\n    &:focus{\n        transform: scale(1.1);\n    }    \n`\n\nexport const Img = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`","import styled from \"@emotion/styled\";\n\nexport const SectionElemet = styled.section`\ndisplay: flex;\nflex-direction: column;\npadding-top: 20px;\npadding-bottom: 20px;\n/* align-items: center; */\n`\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nmax-width: 1440px;\ntext-align: center;\npadding-left: 20px;\npadding-right: 20px;\n`\nexport const Title = styled.h1`\ntext-align: center;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionElemet, Container, Title } from './Section.styled';\n\nconst Section = ({title, children}) => {\n\n    return (\n        <SectionElemet>\n            <Container>\n                {title && <Title>\n                    {title}\n                </Title>}\n                    {children}\n            </Container>\n        </SectionElemet>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    // children: PropTypes.element\n}\n\nexport default Section","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nalign-items: start;\nflex-wrap: wrap;\ngap: 20px;\njustify-content: space-around;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Item, ItemLink, Img } from './MowiesItem.stuled'\n\n\nfunction MowiesItem({ id, linkTo, state, title, originalName, img }) {\n\n    return (\n        <Item\n            key={id}\n        >\n            <ItemLink\n                to={linkTo}\n                state={state}\n            >\n                <Img  src={\n                    `https://image.tmdb.org/t/p/w200${img}`\n                } alt=\"\" />\n                {title || originalName}\n            </ItemLink>\n        </Item>\n    )\n}\n\nMowiesItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    linkTo: PropTypes.string.isRequired,\n    state: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    originalName: PropTypes.string,\n    img: PropTypes.string.isRequired,\n};\n\nexport default MowiesItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {List} from './MowiesList.styled'\nimport MowiesItem from '../MowiesItem/MowiesItem'\n\nfunction MowiesList({ moviesList, state }) {\n    console.log('moviesList :>> ', moviesList);\n    return (\n        <List\n        \n        >\n            {moviesList.map((movie) => (\n            \n                <MowiesItem\n                    key={movie.id}\n                    id={movie.id}\n                    linkTo={`movies/${movie.id}`}\n                    state={state}\n                    title={movie.title}\n                    originalName={movie.original_name}\n                    img={movie.poster_path}\n                    img1={movie.backdrop_path}\n                />\n            \n                ))}\n        </List>\n    )\n}\n\nMowiesList.propTypes = {\n    moviesList: PropTypes.arrayOf(\n        PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        original_name: PropTypes.string.isRequired,\n        poster_path: PropTypes.string.isRequired,\n        backdrop_path: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    state: PropTypes.object.isRequired,\n};\n\nexport default MowiesList\n","import React, {useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { getTrendingMovies } from '../components/Api'\nimport Section from 'components/Section/Section';\nimport MowiesList from '../components/MowiesList/MowiesList'\n\n\nfunction Home() {\n    const [moviesList, setMoviesList] = useState([])\n        const location = useLocation();\n\n    useEffect(() => {\n        const trendingMovies = async () => {\n            try {\n                const resp = await getTrendingMovies();\n                setMoviesList(resp.results);\n                return\n            } catch (error) {\n                console.log('error :>> ', error);\n            }\n        }   \n        trendingMovies();\n    }, [])\n\n    return (\n        <Section\n            title={'Top 20 movies'}\n        >\n            <MowiesList\n                moviesList={moviesList}\n                state={{ from: location }}\n            >\n                \n            </MowiesList>\n        </Section>\n    )\n}\n\nexport default Home\n"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","Item","styled","ItemLink","Link","Img","SectionElemet","Container","Title","title","children","List","linkTo","state","originalName","img","to","src","alt","moviesList","console","log","map","movie","original_name","poster_path","img1","backdrop_path","useState","setMoviesList","location","useLocation","useEffect","trendingMovies","resp","results","Section","from"],"sourceRoot":""}