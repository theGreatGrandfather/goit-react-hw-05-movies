{"version":3,"file":"static/js/838.837effd0.chunk.js","mappings":"4MAEaA,EAAUC,EAAAA,EAAAA,IAAH,yOAaPC,EAASD,EAAAA,EAAAA,IAAH,iGAKNE,EAAOF,EAAAA,EAAAA,EAAH,oI,SCHjB,MAdA,WACE,OACE,SAACD,EAAD,WACE,SAACE,EAAD,WACE,SAACC,EAAD,UAAM,mDAMb,C,4MCXKC,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,OAE7BK,QAAQC,IAAI,mBAAoBH,GAFH,kBAGtBH,EAASC,MAHa,2CAAH,wDAMjBM,EAAa,mCAAG,WAAOC,GAAP,uFACFV,IAAAA,IAAA,gBAAmBU,EAAnB,mCAAgDX,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbQ,EAAO,mCAAG,WAAOD,GAAP,uFACIV,IAAAA,IAAA,gBAAmBU,EAAnB,2CAAwDX,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPS,EAAM,mCAAG,WAAOF,GAAP,uFACKV,IAAAA,IAAA,gBAAmBU,EAAnB,2CAAwDX,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,0KCxBNU,EAAOjB,EAAAA,EAAAA,GAAH,2HCAJkB,EAAOlB,EAAAA,EAAAA,GAAH,kRAaJmB,EAAMnB,EAAAA,EAAAA,IAAH,mHAOHoB,EAAcpB,EAAAA,EAAAA,EAAH,wFAMXqB,EAAOrB,EAAAA,EAAAA,EAAH,8G,SCLjB,MAnBA,YAA+C,IAA5Bc,EAA2B,EAA3BA,GAAIQ,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,UAC9B,OACI,UAACN,EAAD,YAGI,SAACC,EAAD,CAAMM,MAAO,IAAKC,IAAMH,EAAD,yCACeA,GAClC,2GACEI,IAAKL,KACX,SAACD,EAAD,UACKC,KAEL,SAACF,EAAD,UACKI,MAVAV,EAchB,ECUD,MAzBA,YAA6B,IAATc,EAAQ,EAARA,KAChB,OACI,SAACX,EAAD,UACSW,EAAKC,KAAI,SAACC,GAAD,OACN,SAAC,EAAD,CAEIP,IAAKO,EAAGC,aACRP,UAAWM,EAAGN,UACdF,KAAMQ,EAAGR,MAHJQ,EAAGhB,GAFN,KAWzB,E,uCC8BD,MAxCA,WACI,IAAQkB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAON,EAAP,KAAaO,EAAb,KACA,GAA2BC,EAAAA,EAAAA,IAAa,GAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,IACnB,GAAmCC,EAAAA,EAAAA,IAAc,GAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,cAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBF,GAAc,GADE,SAIZH,GAAI,GAJQ,UAKOxB,EAAAA,EAAAA,IAAQiB,GALf,OAKNa,EALM,OAMZV,EAAQU,EAAKjB,MAND,gDAQZU,GAAG,GARS,yBAUZI,GAAc,GAVF,4EAAH,qDAcjBE,GAGH,GAAE,CAAEZ,KAED,2BACKS,IAAW,SAACK,EAAA,EAAD,IACVlB,GAAMA,EAAKmB,QAAS,SAAC,EAAD,CAClBnB,KAAMA,KAEV,uBAAG,wBAEFS,IAAQ,SAACW,EAAA,EAAD,MAGpB,C,+EC5CYZ,EAAe,WAC1B,OAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcY,EAAd,KAKA,MAAO,CAAEZ,MAAAA,EAAOa,OAFD,kBAAMD,GAAS,SAAAZ,GAAK,OAAKA,CAAL,GAApB,EAEUC,GAJd,kBAAMW,GAAS,EAAf,EAIkBV,IAHjB,kBAAMU,GAAS,EAAf,EAIb,C,8ECPYT,EAAgB,WAC3B,OAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBU,EAAhB,KAKA,MAAO,CAAEV,QAAAA,EAASC,cAFI,kBAAMS,GAAW,SAAAV,GAAO,OAAKA,CAAL,GAAxB,EAEYW,UAJhB,kBAAMD,GAAW,EAAjB,EAI2BE,WAH1B,kBAAMF,GAAW,EAAjB,EAIpB,C","sources":["components/404/ErrorPage.styled.js","components/404/ErrorPage.jsx","components/Api.js","components/CastList/CastList.styled.js","components/CastItem/CastItem.styled.js","components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","hooks/useTurnError.js","hooks/useTurnLoader.js"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n\n`\n\nexport const Window = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`\n\nexport const Text = styled.p`\n    display: block;\n    color: red;\n    font-weight: 700;\n    text-align: center;\n    font-size: 28px;\n`","import React from 'react'\nimport { Overlay, Window, Text } from './ErrorPage.styled'\n\nfunction ErrorPage() {\n  return (\n    <Overlay>\n      <Window>\n        <Text>\n          Something went wrong... Try reload the page\n        </Text>\n      </Window>\n    </Overlay>\n  )\n}\n\n\n\nexport default ErrorPage\n","import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    console.log('searchQuery :>> ', searchQuery);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nalign-items: start;\nflex-wrap: wrap;\ngap: 40px;\njustify-content: space-around;\n`\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap:8px;\n    border: 2px solid lightblue;\n    padding: 15px;\n    border-radius: 15px;\n    align-items: center;\n    justify-content: center;\n    flex-basis: calc((100% - 200px) / 6);\n\n    \n`\nexport const Img = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`\n\nexport const Description = styled.p`\n    display: block;\n    margin: 0;\n    text-align: center;\n\n`\nexport const Name = styled.p`\n    display: block;\n    margin: 0;\n    font-weight: 600;\n    text-align:center;\n\n`","import React from 'react'\n\nimport {Item, Img, Description, Name} from './CastItem.styled'\n\nfunction CastItem({id, name, img, character}) {\n    return (\n        <Item\n            key={id}\n        >\n            <Img  width={160} src={(img) ?\n                `https://image.tmdb.org/t/p/w200${img}` :\n                'https://raw.githubusercontent.com/theGreatGrandfather/goit-react-hw-05-movies/main/public/background.jpg'\n                } alt={name}/>\n            <Name>\n                {name}\n            </Name>\n            <Description>\n                {character}\n            </Description>\n        </Item>\n    )\n}\n\nexport default CastItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { List } from './CastList.styled'\nimport CastItem from 'components/CastItem/CastItem'\n\nfunction CastList({ cast }) {\n    return (\n        <List>        \n                {cast.map((el) => (\n                    <CastItem\n                        key={el.id}\n                        img={el.profile_path}\n                        character={el.character}\n                        name={el.name}\n                    />\n                ))}\n                \n        </List>\n    )\n}\n\nCastList.propTypes = {\n    cast: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired, \n        profile_path: PropTypes.string, \n        character: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired, \n    })).isRequired, \n};\n\nexport default CastList\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from '../Api';\nimport CastList from 'components/CastList/CastList';\nimport { useTurnError } from 'hooks/useTurnError';\nimport ErrorPage from 'components/404/ErrorPage';\nimport Loader from 'components/Loader/Loader';\nimport { useTurnLoader } from 'hooks/useTurnLoader';\n\nfunction Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    const { error, on, off } = useTurnError(false);\n    const { loading, toggleLoading } = useTurnLoader(false);\n\n    useEffect(() => {\n        const getCastData = async () => {\n            toggleLoading(true);\n            try {\n                \n                off(true)\n                const resp = await getCast(movieId);\n                setCast(resp.cast);\n            } catch (error) {\n                on(true)\n            }finally {\n                toggleLoading(false)\n            }\n        };\n\n        getCastData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ movieId]);\n    return (\n        <div>\n            {loading && <Loader/>}\n            {(cast&&cast.length) ?<CastList\n                cast={cast}\n            /> :\n            <p>No data about cast </p>\n            }\n            {error&& <ErrorPage/>}\n        </div>\n    );\n}\n\n\n\nexport default Cast;","import { useState } from \"react\";\n\nexport const useTurnError = () => {\n  const [error, setError] = useState(false);\n  const on = () => setError(true);\n  const off = () => setError(false);\n  const toggle = () => setError(error => !error);\n\n  return { error, toggle,  on, off };\n};","import { useState } from \"react\";\n\nexport const useTurnLoader = () => {\n  const [loading, setLoading] = useState(false);\n  const onLoading = () => setLoading(true);\n  const offLoading = () => setLoading(false);\n  const toggleLoading = () => setLoading(loading => !loading);\n\n  return { loading, toggleLoading,  onLoading, offLoading };\n};"],"names":["Overlay","styled","Window","Text","KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","console","log","getMoviesById","id","getCast","getRev","List","Item","Img","Description","Name","name","img","character","width","src","alt","cast","map","el","profile_path","movieId","useParams","useState","setCast","useTurnError","error","on","off","useTurnLoader","loading","toggleLoading","useEffect","getCastData","resp","Loader","length","ErrorPage","setError","toggle","setLoading","onLoading","offLoading"],"sourceRoot":""}