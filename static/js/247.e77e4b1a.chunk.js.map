{"version":3,"file":"static/js/247.e77e4b1a.chunk.js","mappings":"4TAEMA,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,wDAKjBI,EAAa,mCAAG,WAAOC,GAAP,uFACFR,IAAAA,IAAA,gBAAmBQ,EAAnB,mCAAgDT,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbM,EAAO,mCAAG,WAAOD,GAAP,uFACIR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPO,EAAM,mCAAG,WAAOF,GAAP,uFACKR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,gHCqBnB,UA1CA,WACI,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEOR,EAAAA,EAAAA,IAAQE,GAFf,OAENO,EAFM,OAGZC,QAAQC,IAAI,eAAgBF,GAC5BH,EAAQG,EAAKJ,MAJD,gDAMZK,QAAQC,IAAI,eAAZ,MANY,yDAAH,qDAUjBH,GAEH,GAAE,CAAEN,IAELQ,QAAQC,IAAI,YAAaN,IAErB,0BACI,wBACMA,GAAMA,EAAKO,OAAUP,EAAKQ,KAAI,SAACC,GAAD,OAC5B,2BACI,gBAAKC,MAAO,IAAKC,IAAMF,EAAGG,aAAJ,yCACgBH,EAAGG,cACrC,2GACEC,IAAKJ,EAAGK,QACd,uBAAIL,EAAGK,QACP,yBAAG,cAAYL,EAAGM,eANbN,EAAGO,QADgB,KAUhC,uBAAG,2BAKlB,C","sources":["components/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../Api';\n\nfunction Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(() => {\n        const getCastData = async () => {\n            try {\n                const resp = await getCast(movieId);\n                console.log('getCast :>> ', resp);\n                setCast(resp.cast);\n            } catch (error) {\n                console.log('getCast :>> ', error);\n            }\n        };\n\n        getCastData();\n\n    }, [ movieId]);\n\n    console.log('cast :>> ', cast);\n    return (\n        <div>\n            <ul>\n                {(cast&&cast.length) ? cast.map((el) =>\n                    <li key={el.cast_id}>\n                        <img width={200} src={(el.profile_path) ?\n                            `https://image.tmdb.org/t/p/w200${el.profile_path}` :\n                            'https://raw.githubusercontent.com/theGreatGrandfather/goit-react-hw-05-movies/main/public/background.jpg'\n                            } alt={el.name} />\n                        <p>{el.name}</p>\n                        <p>Character: {el.character}</p>\n                    </li>\n                ) :\n                <p>No data about cast </p>\n                }\n            </ul>\n        </div>\n    );\n}\n\n\n\nexport default Cast;"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","movieId","useParams","useState","cast","setCast","useEffect","getCastData","resp","console","log","length","map","el","width","src","profile_path","alt","name","character","cast_id"],"sourceRoot":""}