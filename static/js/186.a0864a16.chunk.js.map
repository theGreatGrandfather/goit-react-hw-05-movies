{"version":3,"file":"static/js/186.a0864a16.chunk.js","mappings":"4MAEaA,EAAUC,EAAAA,EAAAA,IAAH,yOAaPC,EAASD,EAAAA,EAAAA,IAAH,iGAKNE,EAAOF,EAAAA,EAAAA,EAAH,oI,SCHjB,MAdA,WACE,OACE,SAACD,EAAD,WACE,SAACE,EAAD,WACE,SAACC,EAAD,UAAM,mDAMb,C,4MCXKC,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,OAE7BK,QAAQC,IAAI,mBAAoBH,GAFH,kBAGtBH,EAASC,MAHa,2CAAH,wDAMjBM,EAAa,mCAAG,WAAOC,GAAP,uFACFV,IAAAA,IAAA,gBAAmBU,EAAnB,mCAAgDX,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbQ,EAAO,mCAAG,WAAOD,GAAP,uFACIV,IAAAA,IAAA,gBAAmBU,EAAnB,2CAAwDX,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPS,EAAM,mCAAG,WAAOF,GAAP,uFACKV,IAAAA,IAAA,gBAAmBU,EAAnB,2CAAwDX,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,mICmBnB,UAtCA,WAEI,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA2BC,EAAAA,EAAAA,IAAa,GAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,IAiBnB,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,oGAEXF,GAAI,GAFO,UAGQT,EAAAA,EAAAA,IAAOC,GAHf,OAGLW,EAHK,OAIXP,EAAOO,EAAKC,SAJD,gDAMXL,GAAG,GANQ,yDAAH,qDAUhBG,GAEH,GAAE,CAACV,KAGA,4BACI,wBACKG,EAAIU,OAASV,EAAIW,KAAI,SAACC,GAAD,OAClB,2BACI,wBAAG,yBAAG,WAASA,EAAGC,aAClB,uBAAKD,EAAGE,YAFHF,EAAGlB,GADM,KAMtB,uBAAG,6BAGNS,IAAQ,SAAC,IAAD,MAGpB,C,+ECzCYD,EAAe,WAC1B,OAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcY,EAAd,KAKA,MAAO,CAAEZ,MAAAA,EAAOa,OAFD,kBAAMD,GAAS,SAAAZ,GAAK,OAAKA,CAAL,GAApB,EAEUC,GAJd,kBAAMW,GAAS,EAAf,EAIkBV,IAHjB,kBAAMU,GAAS,EAAf,EAIb,C","sources":["components/404/ErrorPage.styled.js","components/404/ErrorPage.jsx","components/Api.js","components/Reviews/Reviews.jsx","hooks/useTurnError.js"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n\n`\n\nexport const Window = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`\n\nexport const Text = styled.p`\n    display: block;\n    color: red;\n    font-weight: 700;\n    text-align: center;\n    font-size: 28px;\n`","import React from 'react'\nimport { Overlay, Window, Text } from './ErrorPage.styled'\n\nfunction ErrorPage() {\n  return (\n    <Overlay>\n      <Window>\n        <Text>\n          Something went wrong... Try reload the page\n        </Text>\n      </Window>\n    </Overlay>\n  )\n}\n\n\n\nexport default ErrorPage\n","import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    console.log('searchQuery :>> ', searchQuery);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { getRev } from '../Api';\nimport { useTurnError } from 'hooks/useTurnError';\nimport ErrorPage from 'components/404/ErrorPage';\n\nfunction Reviews() {\n    \n    const { movieId } = useParams();\n    const [rev, setRev] = useState([])\n    const { error, on, off } = useTurnError(false);\n\n    useEffect(() => {\n        const getRevData = async () => {\n            try {\n                off(true);\n                const resp = await getRev(movieId);\n                setRev(resp.results);\n            } catch (error) {\n                on(true);\n            }\n        }\n        \n        getRevData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [movieId])\n \n    return (\n        <div>\n            <ul>\n                {rev.length ? rev.map((el) =>\n                    <li key={el.id}>\n                        <p><b>Aithor: {el.author}</b></p>\n                        <p>{ el.content}</p>\n                    </li>\n                ) :\n                <p>No data about reviews </p>\n                }\n            </ul>\n            {error&& <ErrorPage/>}\n        </div>\n    )\n}\n\nexport default Reviews\n","import { useState } from \"react\";\n\nexport const useTurnError = () => {\n  const [error, setError] = useState(false);\n  const on = () => setError(true);\n  const off = () => setError(false);\n  const toggle = () => setError(error => !error);\n\n  return { error, toggle,  on, off };\n};"],"names":["Overlay","styled","Window","Text","KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","console","log","getMoviesById","id","getCast","getRev","movieId","useParams","useState","rev","setRev","useTurnError","error","on","off","useEffect","getRevData","resp","results","length","map","el","author","content","setError","toggle"],"sourceRoot":""}