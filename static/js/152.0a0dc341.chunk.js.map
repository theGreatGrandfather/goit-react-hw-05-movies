{"version":3,"file":"static/js/152.0a0dc341.chunk.js","mappings":"4TAEMA,EAAG,mCACTC,IAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,kDAAqDD,IAD/C,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACNN,IAAAA,IAAA,6BAAgCK,EAAhC,oDAAuFC,EAAvF,oBAAuGP,IADjG,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,wDAKjBI,EAAa,mCAAG,WAAOC,GAAP,uFACFR,IAAAA,IAAA,gBAAmBQ,EAAnB,mCAAgDT,IAD9C,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbM,EAAO,mCAAG,WAAOD,GAAP,uFACIR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD5D,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKPO,EAAM,mCAAG,WAAOF,GAAP,uFACKR,IAAAA,IAAA,gBAAmBQ,EAAnB,2CAAwDT,IAD7D,cACZG,EADY,yBAEXA,EAASC,MAFE,2CAAH,qD,6ICtBNQ,EAAOC,EAAAA,EAAAA,GAAH,sKAUJC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0eAuBRG,EAAMH,EAAAA,EAAAA,IAAH,kH,0FClCHI,EAAgBJ,EAAAA,EAAAA,QAAH,wIAObK,EAAYL,EAAAA,EAAAA,IAAH,qJAQTM,EAAQN,EAAAA,EAAAA,GAAH,6C,SCOlB,EAnBgB,SAAC,GAAuB,IAAtBO,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAErB,OACI,SAACJ,EAAD,WACI,UAACC,EAAD,WACKE,IAAS,SAACD,EAAD,UACLC,IAEAC,MAIpB,C,sLCfYC,EAAiBT,EAAAA,EAAAA,IAAH,oFAKdU,EAAmBV,EAAAA,EAAAA,IAAH,oLAShBW,EAAkBX,EAAAA,EAAAA,IAAH,oGAMfY,EAAYZ,EAAAA,EAAAA,GAAH,4DAITa,EAAWb,EAAAA,EAAAA,IAAH,+DAIRc,EAAgBd,EAAAA,EAAAA,GAAH,4DAIbe,EAAmBf,EAAAA,EAAAA,EAAH,4D,SCoB7B,I,MAAA,EAlDA,YAAkF,IAArDO,EAAoD,EAApDA,MAAOS,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAChE,OACI,UAACX,EAAD,WAEKW,IACG,SAACP,EAAD,CACIQ,IAAML,EACNM,IAAKf,IAEZa,GACG,UAACV,EAAD,YACI,SAACE,EAAD,UACKL,KAEL,SAACQ,EAAD,gCACqBE,EADrB,QAGA,SAACH,EAAD,UAAe,cAGf,SAACC,EAAD,UACKG,KAEL,SAACJ,EAAD,UAAe,YAGf,SAACH,EAAD,UACCQ,EAAOI,KAAI,SAACC,GAAD,OACR,SAACT,EAAD,UAGKS,GAFIA,EAFD,UAShB,SAACV,EAAD,UAAe,oBAG9B,E,UCzCYW,EAAgBzB,EAAAA,EAAAA,IAAH,2IAOb0B,EAAa1B,EAAAA,EAAAA,GAAH,oFAKV2B,EAAc3B,EAAAA,EAAAA,GAAH,8FCyBxB,MA9BA,YAAuC,IAAjB4B,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QAC1B,OACE,UAACJ,EAAD,YACE,SAACV,EAAD,UAAkB,6BAGpB,UAACW,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAUG,GAAIF,EAAd,SAAoB,YAIpB,SAACD,EAAD,WACA,SAAC,KAAD,CAAUG,GAAID,EAAd,SAAuB,kBAK3B,SAAC,EAAAE,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIL,EC2CD,MAjEA,WAAyB,IAAD,IACZC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOf,EAAP,KAAkBgB,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAEpD,GAA0BP,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAcoC,EAAd,KACA,GAAsBR,EAAAA,EAAAA,UAAS,IAA/B,eAAOnB,EAAP,KAAY4B,EAAZ,KACA,GAA8BT,EAAAA,EAAAA,UAAS,IAAvC,eAAOlB,EAAP,KAAgB4B,EAAhB,KACA,GAAgCV,EAAAA,EAAAA,UAAS,IAAzC,eAAOjB,EAAP,KAAiB4B,EAAjB,KACA,GAA4BX,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAe4B,EAAf,KA2BA,OA1BAC,QAAQC,IAAI,iBAAkB7B,IAE9B8B,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEMxD,EAAAA,EAAAA,IAAcsC,GAFpB,OAEPmB,EAFO,OAGbJ,QAAQC,IAAI,YAAaG,GAGzBhB,EAAagB,GACbT,EAASS,EAAK7C,OACdqC,EAAQQ,EAAKC,YAAN,yCAC+BD,EAAKC,aACvC,sEACJR,EAAWS,OAAOC,SAAP,UAAuC,GAApBH,EAAKI,gBACnCV,EAAYM,EAAKlC,UACjB6B,EAAUK,EAAKjC,OAAOI,KAAI,SAACC,GAAD,OACtBA,EAAGiC,IADmB,KAbb,kDAiBbT,QAAQC,IAAI,aAAZ,MAjBa,0DAAH,qDAoBlBE,GACH,GAAE,CAAClB,KAGA,iCACI,UAACyB,EAAA,EAAD,YACI,SAAC,KAAD,CAAU5B,GAAIS,EAAaoB,QAA3B,SAAoC,aACpC,SAAC,EAAD,CACIpD,MAAOA,EACPS,IAAKA,EACLC,QAASA,EACTC,SAAUA,EACVC,OAAQA,EACRC,UAAWA,QAKnB,SAACsC,EAAA,EAAD,WACI,SAAC,EAAD,CACI9B,KAAM,OACNC,QAAS,gBAO5B,C","sources":["components/Api.js","components/MowiesItem/MowiesItem.stuled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/MowieFomCollection/MowieFomCollection.styled.js","components/MowieFomCollection/MowieFomCollection.jsx","components/DetailsInfo/DetailsInfo.styled.js","components/DetailsInfo/DetailsInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom'\n\nexport const Item = styled.li`\n    display: flex;\n    gap:20px;\n    align-items: center;\n    justify-content: center;\n    flex-basis: calc((100% - 100px) / 5);\n\n    \n`\n\nexport const ItemLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    gap:10px;\n    max-width: 200px;\n    text-decoration: none;\n    font-weight: 500;\n    color: #111;\n    white-space: normal;\n    border: 2px solid #e7e7e7;\n    border-radius: 8px;\n    padding: 8px;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.3s ease;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    &:hover,\n    &:focus{\n        transform: scale(1.1);\n    }    \n`\n\nexport const Img = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`","import styled from \"@emotion/styled\";\n\nexport const SectionElemet = styled.section`\ndisplay: flex;\nflex-direction: column;\npadding-top: 20px;\npadding-bottom: 20px;\n/* align-items: center; */\n`\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nmax-width: 1440px;\ntext-align: center;\npadding-left: 20px;\npadding-right: 20px;\n`\nexport const Title = styled.h1`\ntext-align: center;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionElemet, Container, Title } from './Section.styled';\n\nconst Section = ({title, children}) => {\n\n    return (\n        <SectionElemet>\n            <Container>\n                {title && <Title>\n                    {title}\n                </Title>}\n                    {children}\n            </Container>\n        </SectionElemet>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    // children: PropTypes.element\n}\n\nexport default Section","import styled from \"@emotion/styled\";\n\nexport const ContentWrapper = styled.div`\n    display: flex;\n    gap: 20px;\n    text-align: start;\n`\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 20px;\n    padding-top: 30px;\n    padding-bottom: 30px;\n    \n`\nexport const GenresContainer = styled.div`\n    display: flex;\n    gap: 20px;\n    justify-content: flex-start;\n    \n`\nexport const MovieTite = styled.h1`\n    display: flex;\n    margin: 0;\n`\nexport const MovieImg = styled.img`\n    display: flex;\n    width: 300px;\n`\nexport const MovieSupTitle = styled.h2`\n    display: flex;\n    margin: 0;\n`\nexport const MovieDescription = styled.p`\n    display: flex;\n    margin: 0;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ContentContainer,ContentWrapper, MovieImg, MovieTite, GenresContainer, MovieDescription, MovieSupTitle } from './MowieFomCollection.styled'\n// https://thegreatgrandfather.github.io/goit-react-hw-05-movies/public/background.jpg\nfunction MowieFomCollection({title, img, average, overview, genres, movieData }) {\n    return (\n        <ContentWrapper>\n            \n            {movieData &&\n                <MovieImg\n                    src={ img }\n                    alt={title}\n            />}\n            {movieData ?\n                <ContentContainer>\n                    <MovieTite>\n                        {title}\n                    </MovieTite>\n                    <MovieDescription>\n                        { `User Score: ${average}%`}\n                    </MovieDescription> \n                    <MovieSupTitle>\n                        Overview\n                    </MovieSupTitle>\n                    <MovieDescription>\n                        {overview }\n                    </MovieDescription> \n                    <MovieSupTitle>\n                        Genres\n                    </MovieSupTitle>\n                    <GenresContainer>\n                    {genres.map((el) =>\n                        <MovieDescription\n                            key={el}\n                        >\n                            {el}\n                        </MovieDescription> \n                    )}\n                    </GenresContainer>\n                </ContentContainer> :\n                <MovieSupTitle>Sorry no data</MovieSupTitle>}\n        </ContentWrapper>\n    )\n}\n\nMowieFomCollection.propTypes = {\n    title: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n    movieData: PropTypes.bool.isRequired,\n};\n\nexport default MowieFomCollection\n","import styled from \"@emotion/styled\";\n\nexport const DetaisWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    text-align: start;\n    /* padding: 40px; */\n`\nexport const DetaisList = styled.ul`\n    display: flex;\n    gap: 20px;\n    text-align: start;\n`\nexport const DetailsItem = styled.li`\n    display: flex;\n    text-align: start;\n    /* padding: 40px; */\n`\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Suspense } from \"react\";\nimport { Outlet } from 'react-router-dom';\n\nimport {DetaisWrapper, DetaisList, DetailsItem} from './DetailsInfo.styled'\nimport {ItemLink} from '../MowiesItem/MowiesItem.stuled'\nimport {MovieDescription} from '../MowieFomCollection/MowieFomCollection.styled'\n\nfunction DetailsInfo({cast, reviews}) {\n  return (\n    <DetaisWrapper>\n      <MovieDescription>\n        Additionals information\n    </MovieDescription>\n    <DetaisList>\n      <DetailsItem>\n        <ItemLink to={cast}>\n          Cast\n        </ItemLink>\n      </DetailsItem>\n        <DetailsItem>\n        <ItemLink to={reviews}>\n          Reviews\n        </ItemLink>\n      </DetailsItem>\n    </DetaisList>\n    <Suspense fallback={<div>Loading...</div>}>\n      <Outlet />\n    </Suspense>\n    </DetaisWrapper>\n  )\n}\n\nDetailsInfo.propTypes = {\n  cast: PropTypes.string.isRequired,\n  reviews: PropTypes.string.isRequired,\n}\n\nexport default DetailsInfo\n","import React, { useEffect, useRef } from 'react'\nimport { useParams, useLocation } from 'react-router-dom'\nimport { useState } from 'react';\n\nimport { getMoviesById } from 'components/Api';\nimport Section from '../components/Section/Section'\nimport MowieFomCollection from 'components/MowieFomCollection/MowieFomCollection';\nimport {ItemLink} from '../components/MowiesItem/MowiesItem.stuled'\nimport DetailsInfo from 'components/DetailsInfo/DetailsInfo';\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [movieData, setMovieData] = useState('');\n\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n    const [title, setTitle] = useState('');\n    const [img, setImg] = useState('');\n    const [average, setAverage] = useState('');\n    const [overview, setOverview] = useState('');\n    const [genres, setGenres] = useState([]);\n    console.log('movieData :>> ', movieData);\n    \n    useEffect(() => {\n        const movieDetails = async () => {\n            try {\n                const resp = await getMoviesById(movieId);\n                console.log('resp :>> ', resp);\n\n\n                setMovieData(resp);\n                setTitle(resp.title);\n                setImg((resp.poster_path) ?\n                    `https://image.tmdb.org/t/p/w300${resp.poster_path}` :\n                    'https://basket-01.wb.ru/vol100/part10070/10070204/images/big/1.jpg');\n                setAverage(Number.parseInt(`${resp.vote_average * 10}`));\n                setOverview(resp.overview);\n                setGenres(resp.genres.map((el) =>\n                    el.name));\n                \n            } catch (error) {\n                console.log('error :>> ', error);\n            }\n        }\n        movieDetails();\n    }, [movieId])\n    \n    return (\n        <>\n            <Section>\n                <ItemLink to={backLinkHref.current}>go back</ItemLink>\n                <MowieFomCollection\n                    title={title}\n                    img={img}\n                    average={average}\n                    overview={overview}\n                    genres={genres}\n                    movieData={movieData}\n                >\n                \n                </MowieFomCollection>\n            </Section >\n            <Section>\n                <DetailsInfo\n                    cast={'cast'}\n                    reviews={'reviews'}\n                >\n\n                </DetailsInfo>\n            </Section>    \n        </>\n    )\n}\n\nexport default MovieDetails\n"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","Item","styled","ItemLink","Link","Img","SectionElemet","Container","Title","title","children","ContentWrapper","ContentContainer","GenresContainer","MovieTite","MovieImg","MovieSupTitle","MovieDescription","img","average","overview","genres","movieData","src","alt","map","el","DetaisWrapper","DetaisList","DetailsItem","cast","reviews","to","Suspense","fallback","movieId","useParams","useState","setMovieData","location","useLocation","backLinkHref","useRef","state","from","setTitle","setImg","setAverage","setOverview","setGenres","console","log","useEffect","movieDetails","resp","poster_path","Number","parseInt","vote_average","name","Section","current"],"sourceRoot":""}