{"version":3,"file":"static/js/593.3256ccb4.chunk.js","mappings":"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","sources":["components/Api.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = `3686f3666c5a0ed623dc3fa0f4b660b5`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3`\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/all/day?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesBySearch = async (searchQuery, page) => {\n    const response = await axios.get(`search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n    return response.data; \n}\n\nexport const getRev = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?language=en-US&api_key=${KEY}`);\n    return response.data; \n}","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\ngap: 4px;\nmargin-top: 20px;\nmargin-bottom: 20px;\n\n`\nexport const Input = styled.input`\ndisplay: flex;\npadding: 12px;\nborder: 2px solid lightblue;\nborder-radius: 8px;\nwidth: 300px;\n\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\npadding: 12px;\nborder: 2px solid lightblue;\nborder-radius: 8px;\nbackground-color: transparent;\ntransition: all 0.3s ease;\ncursor: pointer;\n&:hover,\n&:focus{\n    background-color: #3f51b5;\n    border-color: #3f51b5;\n}\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Input, Button } from './SearchForm.styled'\n\nfunction SearchForm({setQuery, onInputChange}) {\n    return (\n        <Form  onSubmit={setQuery}>\n            <Input\n                name='name'\n                onChange={onInputChange}\n                type=\"text\"\n            />\n            <Button type='submit'>search</Button>\n        </Form>\n    )\n}\n\nSearchForm.propTypes = {\n    setQuery: PropTypes.func.isRequired,\n    onInputChange: PropTypes.func.isRequired,\n}\n\nexport default SearchForm\n","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\nimport { getMoviesBySearch } from 'components/Api';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\n\n\n\nfunction Movies(props) {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const pageQuery = searchParams.get(\"page\") ?? '';\n    const query = searchParams.get(\"query\") ?? '';\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(null);\n    const [searchResult, setSearchResult] = useState([]);\n    const [totalPages, setTotalPages] = useState(null);\n\n    const location = useLocation();\n    \n    useEffect(() => {\n        const searchMovies = async () => {\n            if (!query) {\n                return\n            }\n            try {\n                const resp = await getMoviesBySearch(query, pageQuery)\n                console.log('searchResult :>> ', resp);\n                setSearchResult(resp.results);\n                setTotalPages(resp.total_pages)\n                return\n            } catch (error) {\n                console.log('error :>> ', error);\n            }\n            \n        } \n        searchMovies();\n\n        return () => {\n            setSearchResult([]);\n            setSearchQuery(null);\n            setTotalPages(null)\n        }\n\n    }, [pageQuery, query])\n\n    const onInputChange = e => {\n        e.preventDefault();\n        setSearchQuery(e.currentTarget.value.toLowerCase());\n    }\n\n    const setQuery = e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '') {\n            return;\n        }\n        setSearchParams({ query: searchQuery, page:1 });\n        setPage(1);\n        e.target[0].value = '';\n    }\n\n    const onPrevNextBtnClick = (key) => {\n        switch (key) {\n            case 'prev':\n                setPage(prevPage => Math.max(prevPage - 1, 1));\n                setSearchParams({ query: query, page: page - 1 });\n                break;\n            case 'next':\n                setPage(prevPage => prevPage + 1);\n                setSearchParams({  query: query, page: page + 1 });\n                break;\n            default:\n                break;\n        }\n    }\n\n    console.log('location :>> ', location);\n\n    return (\n        <div>            \n            <SearchForm\n                setQuery={setQuery}\n                onInputChange={onInputChange}\n            />\n            \n            <ul>\n                {searchResult.length ?\n                    searchResult.map((el) =>\n                        <li key={el.id}>\n                            <Link\n                                to={`${el.id}`}\n                                state={{ from: location }}\n                            >\n                                {el.title || el.original_name}</Link>\n                        </li>) :\n                    <p>No movies by request {`'${query}'`} </p>\n                }\n            </ul>\n            {totalPages && \n                <ul>\n                    {pageQuery !== '1' &&\n                        <li>\n                            <button type='button' onClick={()=>onPrevNextBtnClick('prev')}>prev</button>\n                        </li>}\n                    {totalPages > pageQuery && totalPages !== pageQuery &&\n                        <li>\n                            <button type='button' onClick={() => onPrevNextBtnClick('next')}>next</button>\n                    </li>}\n                </ul>\n            }\n        </div>\n    )\n}\n\nexport default Movies\n"],"names":["KEY","axios","getTrendingMovies","response","data","getMoviesBySearch","searchQuery","page","getMoviesById","id","getCast","getRev","Form","styled","Input","Button","setQuery","onInputChange","onSubmit","name","onChange","type","props","useSearchParams","searchParams","setSearchParams","pageQuery","get","query","useState","setSearchQuery","setPage","searchResult","setSearchResult","totalPages","setTotalPages","location","useLocation","useEffect","searchMovies","resp","console","log","results","total_pages","onPrevNextBtnClick","key","prevPage","Math","max","e","preventDefault","trim","target","value","currentTarget","toLowerCase","length","map","el","to","state","from","title","original_name","onClick"],"sourceRoot":""}